<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.order.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="store.order.entity.Order">
    <constructor>
      <idArg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="order_number" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="pay_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="shipment_time" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="shipment_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="shipment_amount" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="invoice_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="invoice_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="order_amount" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="order_score" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_amount" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="buy_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    order_id, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount, 
    invoice_type, invoice_title, order_status, create_time, update_time, order_amount, 
    order_score, pay_amount, buy_number
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from os_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from os_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>


  <insert id="insertSelective" parameterType="store.order.entity.Order">
    insert into os_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="shipmentTime != null">
        shipment_time,
      </if>
      <if test="shipmentType != null">
        shipment_type,
      </if>
      <if test="shipmentAmount != null">
        shipment_amount,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="invoiceTitle != null">
        invoice_title,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="orderScore != null">
        order_score,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="buyNumber != null">
        buy_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null">
        #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null">
        #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null">
        #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null">
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderScore != null">
        #{orderScore,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null">
        #{buyNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="store.order.entity.Order">
    update os_order
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="shipmentTime != null">
        shipment_time = #{shipmentTime,jdbcType=TINYINT},
      </if>
      <if test="shipmentType != null">
        shipment_type = #{shipmentType,jdbcType=TINYINT},
      </if>
      <if test="shipmentAmount != null">
        shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null">
        invoice_type = #{invoiceType,jdbcType=TINYINT},
      </if>
      <if test="invoiceTitle != null">
        invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderScore != null">
        order_score = #{orderScore,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyNumber != null">
        buy_number = #{buyNumber,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="store.order.entity.Order">
    update os_order
    set order_number = #{orderNumber,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      shipment_time = #{shipmentTime,jdbcType=TINYINT},
      shipment_type = #{shipmentType,jdbcType=TINYINT},
      shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      invoice_type = #{invoiceType,jdbcType=TINYINT},
      invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      order_score = #{orderScore,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      buy_number = #{buyNumber,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>