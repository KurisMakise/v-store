<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.order.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="store.order.entity.Order">
        <constructor>
            <idArg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="order_number" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="pay_type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="shipment_time" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="shipment_type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="shipment_amount" javaType="java.lang.Long" jdbcType="DECIMAL"/>
            <arg column="invoice_type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="invoice_title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="order_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="order_amount" javaType="java.lang.Long" jdbcType="DECIMAL"/>
            <arg column="order_score" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="pay_amount" javaType="java.lang.Long" jdbcType="DECIMAL"/>
            <arg column="buy_number" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    order_id, order_number, user_id, pay_type, shipment_time, shipment_type, shipment_amount, 
    invoice_type, invoice_title, order_status, create_time, update_time, order_amount, 
    order_score, pay_amount, buy_number
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from os_order
        where order_id = #{orderId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from os_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>

    <select id="getCount" resultType="int">
        SELECT COUNT(1)
        FROM os_order o
        WHERE
            o.user_id = #{userId}
            AND o.order_status in(${type})
            <if test="search != null">
                AND EXISTS(SELECT
                            1
                        FROM os_order_product p
                        WHERE o.order_id = p.order_id
                         AND p.name like "%"#{search}"%"
                         AND p.product_number like "%"#{search}"%")
            </if>
    </select>

    <select id="listOrder" resultMap="listOrderResultMap">
        SELECT o.order_id        as orderId,
               o.order_number    as orderNumber,
               o.user_id         as userId,
               o.pay_type        as payType,
               o.shipment_time   as shipmentTime,
               o.shipment_type   as shipmentType,
               o.shipment_amount as shipmentAmount,
               o.invoice_title   as invoiceTitle,
               o.invoice_type    as invoiceType,
               o.order_status    as orderStatus,
               o.order_amount    as orderAmount,
               o.pay_amount      as payAmount,
               o.buy_number      as buyNumber,
               s.user_name as orderShipmentUserName,
               p.order_product_id as orderProductId,
               p.pic_img         as picImg,
               p.price,
               p.name,
               p.buy_number      as buyNumber
        FROM os_order o
               LEFT JOIN os_order_product p ON o.order_id = p.order_id
               LEFT JOIN os_order_shipment s ON o.order_id = s.order_id
        WHERE o.user_id = #{userId}
         AND o.order_status in (${type})
         <if test="search != null">
             AND (p.name like "%"#{search}"%" or o.order_number like "%"#{search}"%" or p.product_number like "%"#{search}"%" )
         </if>
        LIMIT #{pageInfo.offset},#{pageInfo.limit}
  </select>
    <resultMap id="listOrderResultMap" type="store.order.pojo.vo.OrderVO">
        <id column="orderId" property="orderId"/>
        <result column="orderNumber" property="orderNumber"/>
        <result column="userId" property="userId"/>
        <result column="payType" property="payType"/>
        <result column="shipmentTime" property="shipmentTime"/>
        <result column="shipmentType" property="shipmentType"/>
        <result column="shipmentAmount" property="shipmentAmount"/>
        <result column="invoiceTitle" property="invoiceTitle"/>
        <result column="invoiceType" property="invoiceType"/>
        <result column="orderStatus" property="orderStatus"/>
        <result column="orderAmount" property="orderAmount"/>
        <result column="payAmount" property="payAmount"/>
        <result column="buyNumber" property="buyNumber"/>
        <result column="orderShipmentUserName" property="orderShipmentUserName"/>
        <collection property="orderProducts" ofType="store.order.entity.OrderProduct">
            <id column="orderProductId" property="orderProductId"/>
            <result column="picImg" property="picImg"/>
            <result column="price" property="price"/>
            <result column="name" property="name"/>
            <result column="buyNumber" property="buyNumber"/>
        </collection>
    </resultMap>

    <insert id="insertSelective" parameterType="store.order.entity.Order">
        insert into os_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="orderNumber != null">
                order_number,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="shipmentTime != null">
                shipment_time,
            </if>
            <if test="shipmentType != null">
                shipment_type,
            </if>
            <if test="shipmentAmount != null">
                shipment_amount,
            </if>
            <if test="invoiceType != null">
                invoice_type,
            </if>
            <if test="invoiceTitle != null">
                invoice_title,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="orderScore != null">
                order_score,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="buyNumber != null">
                buy_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="orderNumber != null">
                #{orderNumber,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=TINYINT},
            </if>
            <if test="shipmentTime != null">
                #{shipmentTime,jdbcType=TINYINT},
            </if>
            <if test="shipmentType != null">
                #{shipmentType,jdbcType=TINYINT},
            </if>
            <if test="shipmentAmount != null">
                #{shipmentAmount,jdbcType=DECIMAL},
            </if>
            <if test="invoiceType != null">
                #{invoiceType,jdbcType=TINYINT},
            </if>
            <if test="invoiceTitle != null">
                #{invoiceTitle,jdbcType=VARCHAR},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderAmount != null">
                #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderScore != null">
                #{orderScore,jdbcType=INTEGER},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="buyNumber != null">
                #{buyNumber,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="store.order.entity.Order">
        update os_order
        <set>
            <if test="orderNumber != null">
                order_number = #{orderNumber,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="shipmentTime != null">
                shipment_time = #{shipmentTime,jdbcType=TINYINT},
            </if>
            <if test="shipmentType != null">
                shipment_type = #{shipmentType,jdbcType=TINYINT},
            </if>
            <if test="shipmentAmount != null">
                shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
            </if>
            <if test="invoiceType != null">
                invoice_type = #{invoiceType,jdbcType=TINYINT},
            </if>
            <if test="invoiceTitle != null">
                invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderScore != null">
                order_score = #{orderScore,jdbcType=INTEGER},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="buyNumber != null">
                buy_number = #{buyNumber,jdbcType=INTEGER},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="store.order.entity.Order">
    update os_order
    set order_number = #{orderNumber,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      shipment_time = #{shipmentTime,jdbcType=TINYINT},
      shipment_type = #{shipmentType,jdbcType=TINYINT},
      shipment_amount = #{shipmentAmount,jdbcType=DECIMAL},
      invoice_type = #{invoiceType,jdbcType=TINYINT},
      invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      order_score = #{orderScore,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      buy_number = #{buyNumber,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>