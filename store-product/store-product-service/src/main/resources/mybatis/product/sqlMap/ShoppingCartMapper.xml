<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.product.mapper.ShoppingCartMapper">
  <resultMap id="BaseResultMap" type="store.product.entity.ShoppingCart">
    <constructor>
      <idArg column="cart_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="product_spec_number" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="buy_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="check_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    cart_id, product_spec_number, user_id, buy_number, create_time, update_time, check_status
  </sql>

  <resultMap id="shoppingCartResultMap" type="store.product.pojo.vo.ShoppingCartVO">
    <id property="cartId" column="cartId" />
    <result property="productSpecNumber" column="productSpecNumber" />
    <result property="userId" column="userId" />
    <result property="buyNumber" column="buyNumber" />
    <result property="checkStatus" column="checkStatus" />
    <result property="stock" column="stock" />
    <result property="salesVolume" column="salesVolume" />
    <result property="price" column="price" />
    <result property="score" column="score" />
    <result property="name" column="name" />
    <result property="picImg" column="picImg" />
    <result property="productNumber" column="productNumber" />
    <collection property="specificationName" ofType="String">
      <result column="specAttrName" />
    </collection>
  </resultMap>


  <select id="list" resultMap="shoppingCartResultMap">
        SELECT
            c.cart_id AS cartId,
			c.product_spec_number AS productSpecNumber,
			c.user_id AS userId,
			c.buy_number AS buyNumber,
			c.check_status AS checkStatus,
			s.stock,
			s.sales_volume AS salesVolume,
			s.price,
			s.score,
			p.name,
			p.pic_img AS picImg,
			p.product_number AS productNumber,
			a.name  AS specAttrName
		FROM
		    os_shopping_cart c
		LEFT JOIN os_product_specification s ON c.product_spec_number = s.product_spec_number
		LEFT JOIN os_product p ON s.product_id = p.product_id
		LEFT JOIN os_product_spec_rel r ON s.product_spec_number = r.product_spec_id
		LEFT JOIN os_specification_attribute a ON r.spec_attr_id = a.spec_attr_id
	    <where>
            <if test="userId != null">
                c.user_id = #{userId}
            </if>
            <if test="checkStatus != -1">
                AND c.check_status = #{checkStatus}
            </if>
        </where>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from os_shopping_cart
    where cart_id = #{cartId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from os_shopping_cart
    where cart_id = #{cartId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="store.product.entity.ShoppingCart">
    insert into os_shopping_cart (cart_id, product_spec_number, user_id, 
      buy_number, create_time, update_time, 
      check_status)
    values (#{cartId,jdbcType=BIGINT}, #{productSpecNumber,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{buyNumber,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{checkStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="store.product.entity.ShoppingCart">
    insert into os_shopping_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        cart_id,
      </if>
      <if test="productSpecNumber != null">
        product_spec_number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="buyNumber != null">
        buy_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        #{cartId,jdbcType=BIGINT},
      </if>
      <if test="productSpecNumber != null">
        #{productSpecNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="buyNumber != null">
        #{buyNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="store.product.entity.ShoppingCart">
    update os_shopping_cart
    <set>
      <if test="productSpecNumber != null">
        product_spec_number = #{productSpecNumber,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="buyNumber != null">
        buy_number = #{buyNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=TINYINT},
      </if>
    </set>
    where cart_id = #{cartId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="store.product.entity.ShoppingCart">
    update os_shopping_cart
    set product_spec_number = #{productSpecNumber,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      buy_number = #{buyNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      check_status = #{checkStatus,jdbcType=TINYINT}
    where cart_id = #{cartId,jdbcType=BIGINT}
  </update>
</mapper>