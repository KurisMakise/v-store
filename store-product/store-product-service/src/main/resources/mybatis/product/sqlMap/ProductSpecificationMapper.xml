<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.product.mapper.ProductSpecificationMapper">
    <resultMap id="BaseResultMap" type="store.product.entity.ProductSpecification">
        <constructor>
            <idArg column="product_spec_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="product_spec_number" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="product_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="spec" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="stock" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="sales_volume" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="default_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    product_spec_id, product_spec_number, product_id, spec, stock, sales_volume, price,
    score, default_status, status, create_time, create_by, update_time, update_by
  </sql>

    <resultMap id="productSpecVOResultMap" type="store.product.pojo.vo.ProductSpecificationVO">
        <id column="product_spec_number" property="productSpecNumber"/>
        <result column="price" property="price"/>
        <result column="score" property="score"/>
        <result column="stock" property="stock"/>
        <result column="sales_volume" property="salesVolume"/>
        <collection property="specAttrIds" ofType="java.lang.Long">
            <id column="spec_attr_id"/>
        </collection>
    </resultMap>

    <resultMap id="specAttrVOResultMap" type="store.product.pojo.vo.SpecificationVO">
        <id column="specificationId" property="specificationId"/>
        <result column="specName" property="specName"/>
        <collection property="specificationAttributeVOS" ofType="store.product.pojo.vo.SpecificationAttributeVO">
            <id column="specAttrId" property="specAttrId"/>
            <result column="specAttrName" property="specAttrName"/>
        </collection>
    </resultMap>

    <select id="listProductSpecVO" resultMap="productSpecVOResultMap">
        SELECT r.product_spec_rel_id,
               r.spec_attr_id,
               s.product_spec_number,
               s.price,
               s.score,
               s.stock,
               s.sales_volume
        FROM os_product_specification s
                 LEFT JOIN os_product_spec_rel r ON s.product_spec_id = r.product_spec_id
        where s.product_id = #{productId}
        AND s.status = #{status}
        ORDER BY
        s.product_spec_number DESC,
        r.spec_attr_id ASC
    </select>

    <select id="listSpecVO" resultMap="specAttrVOResultMap">
        SELECT a.spec_attr_id     as specAttrId,
               a.name             as specAttrName,
               s.name             as specName,
               s.specification_id as specificationId
        FROM os_specification_attribute a
                 LEFT JOIN os_specification s ON a.specification_id = s.specification_id
        WHERE s.status = #{status}
        ORDER BY
        s.sort ASC,
        a.sort ASC
    </select>

</mapper>