<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.product.mapper.ProductRecommendMapper">
  <resultMap id="BaseResultMap" type="store.product.entity.ProductRecommend">
    <constructor>
      <idArg column="recommend_product_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="recommend_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="product_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="begin_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    recommend_product_id, recommend_id, product_id, sort, status, begin_time, end_time, 
    create_time, create_by, update_time, update_by
  </sql>

  <select id="getHotComment" resultType="store.product.pojo.vo.ProductVO">
      SELECT
        user_name as userName,
        comment_id as commentId,
        content
      FROM os_comment c
      WHERE
          c.product_id = #{productId}
      AND c.type = #{commentType}
      AND c.status = #{status}
      ORDER BY
          rand()
      limit 1
  </select>

  <select id="listByRecommendId" resultType="store.product.pojo.vo.ProductVO" >
      SELECT
          recommend_product_id AS recommendProductId,
          p.product_id AS productId,
          product_number AS productNumber,
          name,
          show_price AS showPrice,
          introduce,
          pic_img AS picImg,
          comment_number AS commentNumber
      FROM
          os_product_recommend r
      LEFT JOIN os_product p ON p.product_id = r.product_id
      LEFT JOIN os_product_attribute a ON a.product_id = p.product_id
      WHERE
          r.recommend_id = #{recommendId}
      AND r.status = #{status}
<!-- AND r.begin_time &lt;= #{date}
      AND r.end_time &gt;= #{date} -->
      ORDER BY r.sort
      limit #{showNumber}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from os_product_recommend
    where recommend_product_id = #{recommendProductId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from os_product_recommend
    where recommend_product_id = #{recommendProductId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="store.product.entity.ProductRecommend">
    insert into os_product_recommend (recommend_product_id, recommend_id, product_id, 
      sort, status, begin_time, 
      end_time, create_time, create_by, 
      update_time, update_by)
    values (#{recommendProductId,jdbcType=BIGINT}, #{recommendId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{sort,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="store.product.entity.ProductRecommend">
    insert into os_product_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recommendProductId != null">
        recommend_product_id,
      </if>
      <if test="recommendId != null">
        recommend_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recommendProductId != null">
        #{recommendProductId,jdbcType=BIGINT},
      </if>
      <if test="recommendId != null">
        #{recommendId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="store.product.entity.ProductRecommend">
    update os_product_recommend
    <set>
      <if test="recommendId != null">
        recommend_id = #{recommendId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where recommend_product_id = #{recommendProductId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="store.product.entity.ProductRecommend">
    update os_product_recommend
    set recommend_id = #{recommendId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where recommend_product_id = #{recommendProductId,jdbcType=BIGINT}
  </update>
</mapper>