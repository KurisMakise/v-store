<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.product.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="store.product.entity.Comment">
    <constructor>
      <idArg column="comment_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="product_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pic_img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="star" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="good_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, product_id, user_id, user_name, pic_img, order_id, star, content, good_count, 
    status, type, create_time, create_by, update_time, update_by
  </sql>

  <select id="listTimeLine" resultType="store.product.pojo.vo.CommentVO">
    SELECT c.comment_id as commentId,
           c.create_time as createTime,
           c.user_name as userName,
           c.content,
           c.good_count as goodCount
    FROM os_comment c
    WHERE c.product_id = #{productId}
    AND c.status = #{status}
  </select>

    <resultMap id="listCommentResultMap" type="store.product.pojo.vo.CommentVO">
        <id column="commentId" property="commentId"/>
        <result column="createTime" property="createTime"/>
        <result column="userName" property="userName"/>
        <result column="content" property="content"/>
        <result column="goodCount" property="goodCount"/>
        <result column="picImg" property="picImg"/>
        <collection property="replyComments" ofType="store.product.pojo.vo.CommentReplyVO">
            <id column="commentReplyId" property="commentReplyId"/>
            <result column="type" property="type"/>
            <result column="rePicImg" property="picImg"/>
            <result column="reUserName" property="userName"/>
            <result column="reContent" property="content"/>
            <result column="reGoodCount" property="goodCount"/>
        </collection>
    </resultMap>


  <select id="listComment" resultMap="listCommentResultMap">
    SELECT c.comment_id as commentId,
           c.create_time as createTime,
           c.user_name as userName,
           c.content,
           c.good_count as goodCount,
           c.pic_img as picImg,
           r.comment_reply_id as commentReplyId,
           r.type,
           r.pic_img as rePicImg,
           r.user_name as reUserName,
           r.content as reContent,
           r.good_count as reGoodCount
    FROM os_comment c
    LEFT JOIN os_comment_reply r ON c.comment_id = r.comment_id
    WHERE c.product_id = #{productId}
    AND c.status = #{status}
  </select>

</mapper>